#!/usr/bin/perl

# The main entry point.
# 
# Give it a board to solve, and it will start cranking away.

    use strict;
    use warnings;

    # FindBin replacement
    use Cwd 'abs_path';
    use File::Basename;
    use lib dirname( abs_path $0 );

    use TreeTraversal;
    use Board;
    use Move;

    use Time::HiRes qw( time );
    use Data::Dumper;

my $filename;
parse_cmdline();

my $board = Board::new_from_file($filename);

$board->display;

my $move_list;
if ($ARGV{'--iddfs'}) {
    $move_list = TreeTraversal::IDDFS($board);
} else {
    $move_list = TreeTraversal::A_star($board);
}

if (defined($move_list)) {
    print "==== SOLUTION ====\n";
    TreeTraversal::display_solution($move_list, $board);
    TreeTraversal::print_stats();
} else {
    print "No solution found.\n";
}



# Changes the following variables in the global scope:
#       - $filename
#       - %ARGV       (see https://metacpan.org/pod/Getopt::Casual)
sub parse_cmdline {
    # do a bit of manual parsing before Getopt::Casual takes over
    if (@ARGV && $ARGV[0] !~ /^-/ && -e $ARGV[0]) {
        $filename = shift @ARGV;
    } else {
        usage();
    }
    eval "use Getopt::Casual";

    sub usage {print <DATA>; exit 1}
    $ARGV{'--help'} || $ARGV{'-h'} and usage();
    $ARGV{'--dump_args'} and die Dumper(\%ARGV);
}


__DATA__
Usage:
    iojoe10 <board_filename> <options>


######## board format ########

Files are whitespace-delimited.

Pieces are represented by:

    Movable numbers             -9, ... -1, 0, 1, ... 9

    A wall                      X or XX

    A blank space               .

    Sliders:
        up                      100
        right                   200
        down                    300
        left                    400
        left/right              500
        up/down                 600
        all four directions     700

    Invert block                +-

Things that aren't added yet:

    Multiply blocks


######## options ########

--iddfs
        Use the IDDFS search algorithm.  (default is A*)


