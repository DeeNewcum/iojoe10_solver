#!/usr/bin/perl

# The main entry point.
# 
# Give it a board to solve, and it will start cranking away.

    use strict;
    use warnings;

    # FindBin replacement
    use Cwd 'abs_path';
    use File::Basename;
    use lib dirname( abs_path $0 );

    use TreeTraversal;
    use Board;
    use Move;

    use Time::HiRes qw( time );
    use Data::Dumper;

my $filename;
parse_cmdline();

my $board = Board::new_from_file($filename);
        #die Dumper $board;

$board->display;

my $move_list;
if ($ARGV{'--iddfs'}) {
    $move_list = TreeTraversal::IDDFS($board);
} else {
    $move_list = TreeTraversal::A_star($board);
}

if (defined($move_list)) {
    print "==== SOLUTION ====\n";
    TreeTraversal::display_solution($move_list, $board);
    my $soln_len = sprintf(",    solution length: %d moves", scalar(@$move_list));
    $soln_len .= "    (of minimum $board->{file_fields}{shortest_solution})"
                if $board->{file_fields}{shortest_solution};
    TreeTraversal::print_stats($soln_len);
} else {
    print "No solution found.\n";
}



# Changes the following variables in the global scope:
#       - $filename
#       - %ARGV       (see https://metacpan.org/pod/Getopt::Casual)
sub parse_cmdline {
    # do a bit of manual parsing before Getopt::Casual takes over
    if (@ARGV && $ARGV[0] !~ /^-/ && -e $ARGV[0]) {
        $filename = shift @ARGV;
    } else {
        usage();
    }
    eval "use Getopt::Casual";

    sub usage {print <DATA>; exit 1}
    $ARGV{'--help'} || $ARGV{'-h'} and usage();
    $ARGV{'--dump_args'} and die Dumper(\%ARGV);


    #### be able to toggle certain things on/off, to make it easy to run the compare.pl reports ####

    $ARGV{'--disable-islands'} = $ARGV{'--compare-old'};
    #$ARGV{'--disable-noclipping-shortcut'} = $ARGV{'--compare-old'};
    #$ARGV{'--disable-eqzero'} = $ARGV{'--compare-old'};
    $ARGV{'--disable-noclipping-shortcut'} = 1 if $ARGV{'--dijkstra'};      # when we use --dijkstra, often we're looking for a rigorously-correct minimal solution

    no warnings 'redefine';

    if ($ARGV{'--dijkstra'}) {
        *TreeTraversal::heuristic = sub { 0 };
    }
    if ($ARGV{'--disable-eqzero'}) {
        *IsUnsolvable::eqzero = sub { 1 };
    }
    if ($ARGV{'--disable-noclipping-shortcut'}) {
        *IsUnsolvable::_noclipping_shortcut = sub { undef };
    }
    if ($ARGV{'--disable-islands'}) {
        *IsUnsolvable::islands = sub { 0 };
    }

    use warnings;
}


__DATA__
Usage:
    iojoe10 <board_filename> <options>


######## board format ########

Files are whitespace-delimited.

Pieces are represented by:

    Movable numbers             -9, ... -1, 0, 1, ... 9

    A wall                      X or XX

    A blank space               .

    Sliders:
        up                      ^^
        right                   >>
        down                    vv
        left                    <<
        left/right              <>
        up/down                 ^v
        all four directions     RK      (rook / castle)

    Invert block                +-

    Multiply blocks             x2, x3, ... x9


######## options ########

--iddfs
        Use the IDDFS search algorithm.  (default is A*)

--dijkstra
        Use Dijkstra's algorithm.  (instead of A*)

