- implement multiplication


- implement IsUnsolvable::geographically_isolated()
        - test it on Inverting-11


- Are there any ways to improve the heuristic?  That seems like one of the best ways to speed up A*.
        - have it prioritize combining  9s, 8s, and 1s, over other combinations
        - In some cases, we know that two pieces MUST be combined at some point.
                (because of the work done in IsUnsolvable::noclipping_mark3())
          Is it possible to extract that information, and use it to avoid exploring paths that
          misuse either of that pair of pieces?
    


- possible constant-time optimizations:

    - install Class::XSAccessor   (Moo says it can speed things up if this is installed)


- release to a few people:

    - contact the author, see if they're interested in this at all
            (it's very possible they have already built their own)

                https://twitter.com/10TheGame
                https://twitter.com/iojoetweets
                http://www.iojoe.com/about.html     simon @ iojoe.com


    - post in some other places:
                http://jayisgames.com/archives/2013/10/10.php


- A* seems to be taking more time-per-move than IDDFS.
  Is this an apples-to-apples comparison?  Is the metric when running IDDFS accurate?

        - if the IDDFS metric is inaccurate, then we haven't been getting proper information about
          how much of a time-penalty we get from hashing or other "optional" features


- Create a new series of boards for inclusion with the game, called "10 is Routing".
  The emphasis here is on path-finding / routing pieces through a path, and providing little
  structures that allow 1) pieces to exchange positions, 2) T-branches so they can go one way or the
  other, etc.

  The board Hard-13 is a great example of this kind of board.  However, it is a bit hard, and there
  should be a ramp-up in difficulty, levels that are a little less hard, for the player to learn
  from.


- attach a screenshot of the program working

    - use Github Pages to host the screenshot:   http://oli.jp/2011/github-pages-workflow/

    - Maybe I want to find some way to compress the solution listing though....
        make it wider.     Use Term::Readkey?   http://stackoverflow.com/a/1782149/1042525
        Or just assume it's 80 cols wide, in which case we can fit 5 boards wide...





- notes from implementing A*:

    "A* search is one of the best general-purpose graph search algorithms when there's a way to
    estimate the distance to the goal"

    http://www.autonlab.org/tutorials/astar08.pdf
    http://www.gamasutra.com/view/feature/131724/smart_move_intelligent_.php?page=5
    http://www.youtube.com/playlist?list=PL473C810C4140E164

    articles with pseudocode, or have discussions of implementation details:
        https://en.wikipedia.org/wiki/A*_search_algorithm#Pseudocode
        http://www.policyalmanac.org/games/aStarTutorial.htm
        http://web.mit.edu/eranki/www/tutorials/search/
        http://theory.stanford.edu/~amitp/GameProgramming/ImplementationNotes.html
